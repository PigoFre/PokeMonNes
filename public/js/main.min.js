!function t(r,e,n){function o(u,a){if(!e[u]){if(!r[u]){var s="function"==typeof require&&require;if(!a&&s)return s(u,!0);if(i)return i(u,!0);var p=new Error("Cannot find module '"+u+"'");throw p.code="MODULE_NOT_FOUND",p}var f=e[u]={exports:{}};r[u][0].call(f.exports,function(t){var e=r[u][1][t];return o(e?e:t)},f,f.exports,t,r,e,n)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<n.length;u++)o(n[u]);return o}({1:[function(t,r,e){"use strict";var n=t("./ROMHeader"),o=t("./util"),i=function(t){this.uint8=new Uint8Array(t),this.header=new n(this),this.mapper=this._generateMapper(),this.chrrom=null};i.prototype._generateMapper=function(){var t=this.header.getMapperNum();switch(t){case 0:break;default:throw window.alert("unsupport No."+t+" Mapper"),new Error("unsupport No."+t+" Mapper")}},i.prototype.dump=function(){for(var t=0;t<this.uint8.byteLength/8;t++){for(var r=8*t+":",e=0;8>e;e++)r+=","+o.hex(this.uint8[t+e]);console.log(r)}},i.prototype.load=function(t,r){if(!r)return this.uint8[t];for(var e=[],n=0;r>n;n++)e.push(this.uint8[t+n]);return e},i.prototype.isNES=function(){return this.header.isNES()},r.exports=i},{"./ROMHeader":2,"./util":4}],2:[function(t,r,e){"use strict";var n=t("./util"),o=function(t){this.rom=t};o.prototype.SIGNATURE=[78,69,83,26],o.prototype.isNES=function(){var t=this.rom.load(0,4);return n.isEqual(t,this.SIGNATURE)},o.prototype.getMapperNum=function(){var t=this.rom.load(6),r=n.getPartialBits(t,4,15),e=this.rom.load(6),o=n.getPartialBits(e,4,15);return o<<4|r},o.prototype.getPartialBits=function(t,r,e){return t>>r&e},r.exports=o},{"./util":4}],3:[function(t,r,e){"use strict";var n=t("./ROM");window.onload=function(){var t="rom/mario.nes",r=new XMLHttpRequest;r.responseType="arraybuffer",r.onload=function(){var t=r.response;new n(t)},r.onerror=function(t){console.log("can't get rom binary")},r.open("GET",t,!0),r.send(null)}},{"./ROM":1}],4:[function(t,r,e){"use strict";var n={};n.hex=function(t){var r=t.toString(16),e="0x";return r.length<2&&(r=("00"+r).slice(-2)),e+r},n.bit=function(t){var r=t.toString(2),e="0b";return r.length<8&&(r=("00000000"+r).slice(-8)),e+r},n.isEqual=function(t,r){return t.toString()===r.toString()},n.getPartialBits=function(t,r,e){return t>>r&e},r.exports=n},{}]},{},[3]);